// Copyright (C) 2019 by Joseph Mirabel, LAAS-CNRS.
//
// This file is part of the agimus-hpp
//
// This software is provided "as is" without warranty of any kind,
// either expressed or implied, including but not limited to the
// implied warranties of fitness for a particular purpose.
//
// See the COPYING file for more information.

#ifndef HPP_AGIMUS_IDL_DISCRETIZATION_IDL
#define HPP_AGIMUS_IDL_DISCRETIZATION_IDL
#include <hpp/common.idl>
#include <hpp/pinocchio_idl/robots.idl>
#include <hpp/core_idl/paths.idl>

module agimusHpp_idl
{
  exception Error
  {
    string msg;
  };

  interface Discretization
  {
    HPP_EXPOSE_MEMORY_DEALLOCATION(Error)

    const long Position              = 1;
    const long Derivative            = 2;
    const long PositionAndDerivative = 3;
    void    compute (in hpp::value_type time) raises (Error);
    boolean addCenterOfMass (in string name, in hpp::pinocchio_idl::CenterOfMassComputation com, in long option) raises (Error);
    boolean addOperationalFrame (in string name, in long option) raises (Error);
    void    resetTopics () raises (Error);
    void    setJointNames (in hpp::Names_t names) raises (Error);
    void    setPath (in hpp::core_idl::Path p) raises (Error);
    //-> path
    boolean initializeRosNode (in string name, in boolean anonymous) raises (Error);
    void    shutdownRos () raises (Error);
    void    setTopicPrefix (in string tp) raises (Error);
    //->topicPrefix
  }; // interface Discretization
}; // module agimus
//* #include <hpp/core/path.hh>
//* #include <hpp/core/path-vector.hh>
//* #include <hpp/agimus/discretization.hh>
//* #include <hpp/core_idl/paths-idl.hh>

#endif // HPP_AGIMUS_IDL_DISCRETIZATION_IDL
